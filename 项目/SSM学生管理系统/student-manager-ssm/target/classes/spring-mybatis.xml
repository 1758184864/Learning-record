<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

        <!--关联数据库配置文件-->
        <context:property-placeholder location="classpath:jdbc.properties" />

        <!--配置数据源：数据源有非常多，可以使用第三方的，也可使使用Spring的-->
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="${jdbc.driverClassName}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
        </bean>

        <!-- 3.配置SqlSessionFactory对象 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <!-- 注入数据库连接池 -->
                <property name="dataSource" ref="dataSource"/>
                <!-- 绑定Mybatis核心配置文件:mybatis-config.xml -->
                <property name="configLocation" value="classpath:mybatis-config.xml"/>
                <!--分页插件-->
                <property name="plugins">
                        <set>
                                <bean class="com.github.pagehelper.PageInterceptor">
                                        <property name="properties">
                                                <props>
                                                        <prop key="helperDialect">mysql</prop>
                                                </props>
                                        </property>
                                </bean>
                        </set>
                </property>
        </bean>

        <!-- 4.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 -->
        <!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!-- 注入sqlSessionFactory -->
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
                <!-- 给出需要扫描mapper接口包 -->
                <property name="basePackage" value="mapper"/>
        </bean>

        <!-- 扫描service相关的bean -->
        <context:component-scan base-package="service" />

<!--        &lt;!&ndash;StudentServiceImpl注入到IOC容器中&ndash;&gt;-->
<!--        <bean id="StudentServiceImpl" class="service.impl.StudentServiceImpl">-->
<!--                <property name="studentMapper" ref="studentMapper"/>-->
<!--        </bean>-->
<!--        &lt;!&ndash;StudentServiceImpl注入到IOC容器中&ndash;&gt;-->
<!--        <bean id="UserServiceImpl" class="service.impl.UserServiceImpl">-->
<!--                <property name="userMapper" ref="userMapper"/>-->
<!--        </bean>-->

        <!-- 配置声明式事务管理器 -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <!-- 注入数据库连接池 -->
                <property name="dataSource" ref="dataSource" />
        </bean>

        <!--配置事务通知-->
        <tx:advice id="txAdvice" transaction-manager="transactionManager">
                <tx:attributes>
                        <tx:method name="*" propagation="REQUIRED"/>
                </tx:attributes>
        </tx:advice>
        <aop:config>
                <aop:pointcut id="txPointcut" expression="execution(* mapper.*.*(..))"/>
                <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
        </aop:config>

</beans>